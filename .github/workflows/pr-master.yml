name: Pull Request
on:
  pull_request:
    types: [opened, edited, synchronize, reopened, closed]
env:
  ROOT_EMAIL: ${{ secrets.BOOTSTRAP_ROOT_EMAIL }}
  TF_VAR_ROOT_EMAIL: ${{ secrets.BOOTSTRAP_ROOT_EMAIL }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BOOTSTRAP_GITHUB_TOKEN: ${{ secrets.BOOTSTRAP_GITHUB_TOKEN }}
  TF_VAR_BOOTSTRAP_GITHUB_TOKEN: ${{ secrets.BOOTSTRAP_GITHUB_TOKEN }}
  BOOTSTRAP_TERRAFORM_TOKEN: ${{ secrets.BOOTSTRAP_TERRAFORM_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.BOOTSTRAP_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.BOOTSTRAP_AWS_SECRET_ACCESS_KEY }}
jobs:
  plan:
    if: github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git config user.name "Automated Version Bump"
          git config user.email "gh-action-bump-version@users.noreply.github.com"
      - uses: hashicorp/setup-terraform@v1
      - run: |
          export ORGANIZATION="$(./scripts/git.sh | jq -r .organization)"
          ./scripts/init-terraform-cloud.sh $ROOT_EMAIL $BOOTSTRAP_TERRAFORM_TOKEN $ORGANIZATION
          terraform init -backend-config="hostname=app.terraform.io" -backend-config="organization=$ORGANIZATION" -backend-config="token=$BOOTSTRAP_TERRAFORM_TOKEN"
      - run: terraform plan -no-color -out planfile
        id: plan
      - run: gpg --batch -c --passphrase "$BOOTSTRAP_GITHUB_TOKEN" planfile
      - uses: mshick/add-pr-comment@v1
        with:
          message: |
            ```
            ${{ join(steps.plan.outputs.*, '\n')}}
            ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: plan/${{ github.sha }}
          release_name: Terraform Plan ${{ github.sha }}
          body: |
            ```
            ${{ join(steps.plan.outputs.*, '\n')}}
            ```
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: planfile.gpg
          asset_name: planfile.gpg
          asset_content_type: application/octet-stream
  apply:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git config user.name "Automated Version Bump"
          git config user.email "gh-action-bump-version@users.noreply.github.com"
      - uses: hashicorp/setup-terraform@v1
      - run: |
          export ORGANIZATION="$(./scripts/git.sh | jq -r .organization)"
          terraform init -backend-config="hostname=app.terraform.io" -backend-config="organization=$ORGANIZATION" -backend-config="token=$BOOTSTRAP_TERRAFORM_TOKEN"
      - uses: dsaltares/fetch-gh-release-asset@0.0.4
        with:
          version: latest
          file: planfile.gpg
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: gpg --batch -d --passphrase "$BOOTSTRAP_GITHUB_TOKEN" -o planfile planfile.gpg
      - run: terraform apply -no-color planfile
        id: apply
      - uses: mshick/add-pr-comment@v1
        with:
          message: |
            ```
            ${{ join(steps.apply.outputs.*, '\n')}}
            ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}
